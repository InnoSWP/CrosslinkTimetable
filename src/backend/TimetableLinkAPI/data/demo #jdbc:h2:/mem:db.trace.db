2022-06-25 19:27:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MAILINGLIST" not found (this database is empty); SQL statement:
INSERT INTO mailingList (textIdentifier) values (?) [42104-212]
2022-06-25 19:27:31 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MAILINGLIST" not found (this database is empty); SQL statement:
SELECT id FROM mailingList WHERE textIdentifier = ? [42104-212]
2022-06-25 20:26:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE [*]DATABASE IF NOT EXISTS timetable;\000aUSE timetable;\000a\000aSET SQL_SAFE_UPDATES = 0;\000a\000aCREATE TABLE IF NOT EXISTS mailingList (\000a    id BIGINT PRIMARY KEY AUTO_INCREMENT,\000a    textIdentifier VARCHAR(40) UNIQUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS email(\000a    id BIGINT PRIMARY KEY AUTO_INCREMENT,\000a    emailAddress VARCHAR(60) UNIQUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS emailBelonging(\000a    id BIGINT PRIMARY KEY AUTO_INCREMENT,\000a    emailId BIGINT,\000a    mailingListId BIGINT,\000a    FOREIGN KEY (emailId) REFERENCES email (id) ON DELETE CASCADE,\000a    FOREIGN KEY (mailingListId) references mailingList (id) ON DELETE CASCADE\000a);\000a\000aCREATE TABLE IF NOT EXISTS event(\000a    outlookAppointmentId varchar(400) PRIMARY KEY\000a);\000a"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS timetable;
USE timetable;

SET SQL_SAFE_UPDATES = 0;

CREATE TABLE IF NOT EXISTS mailingList (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    textIdentifier VARCHAR(40) UNIQUE
);

CREATE TABLE IF NOT EXISTS email(
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    emailAddress VARCHAR(60) UNIQUE
);

CREATE TABLE IF NOT EXISTS emailBelonging(
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    emailId BIGINT,
    mailingListId BIGINT,
    FOREIGN KEY (emailId) REFERENCES email (id) ON DELETE CASCADE,
    FOREIGN KEY (mailingListId) references mailingList (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event(
    outlookAppointmentId varchar(400) PRIMARY KEY
);
 [42001-212]
2022-06-25 20:30:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE [*]DATABASE IF NOT EXISTS timetable;\000aUSE timetable;\000a\000aSET SQL_SAFE_UPDATES = 0;\000a\000aCREATE TABLE IF NOT EXISTS mailingList (\000a    id BIGINT PRIMARY KEY AUTO_INCREMENT,\000a    textIdentifier VARCHAR(40) UNIQUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS email(\000a    id BIGINT PRIMARY KEY AUTO_INCREMENT,\000a    emailAddress VARCHAR(60) UNIQUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS emailBelonging(\000a    id BIGINT PRIMARY KEY AUTO_INCREMENT,\000a    emailId BIGINT,\000a    mailingListId BIGINT,\000a    FOREIGN KEY (emailId) REFERENCES email (id) ON DELETE CASCADE,\000a    FOREIGN KEY (mailingListId) references mailingList (id) ON DELETE CASCADE\000a);\000a\000aCREATE TABLE IF NOT EXISTS event(\000a    outlookAppointmentId varchar(400) PRIMARY KEY\000a);\000a"; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS timetable;
USE timetable;

SET SQL_SAFE_UPDATES = 0;

CREATE TABLE IF NOT EXISTS mailingList (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    textIdentifier VARCHAR(40) UNIQUE
);

CREATE TABLE IF NOT EXISTS email(
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    emailAddress VARCHAR(60) UNIQUE
);

CREATE TABLE IF NOT EXISTS emailBelonging(
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    emailId BIGINT,
    mailingListId BIGINT,
    FOREIGN KEY (emailId) REFERENCES email (id) ON DELETE CASCADE,
    FOREIGN KEY (mailingListId) references mailingList (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event(
    outlookAppointmentId varchar(400) PRIMARY KEY
);
 [42001-212]
